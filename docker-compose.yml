version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: timesheet-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: timesheetintegration
    ports:
      - "3307:3306"  # Changed from 3306:3306 to avoid conflict
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - timesheet-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  # Spring Boot Backend
  backend:
    build: ./Timesheet-Client-monolithic-arch
    container_name: timesheet-backend
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/timesheetintegration?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    ports:
      - "0.0.0.0:8083:8083"  # Listen on all interfaces
    networks:
      - timesheet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Angular Frontend
  frontend:
    build: ./Timesheet_FrontEnd
    container_name: timesheet-frontend
    depends_on:
      - backend
    environment:
      - API_HOST=${HOST_IP:-localhost}  # Use HOST_IP environment variable or localhost as fallback
    ports:
      - "0.0.0.0:4200:80"  # Changed from 8080 to 4200 to avoid Jenkins conflict
    networks:
      - timesheet-network

  # Nginx Exporter for Frontend metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: timesheet-nginx-exporter
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://frontend:80/nginx_status'
    depends_on:
      - frontend
    networks:
      - timesheet-network
    restart: unless-stopped

  # Prometheus for Monitoring
  prometheus:
    build:
      context: ./monitoring
      dockerfile: Dockerfile.prometheus
    container_name: timesheet-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - timesheet-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: timesheet-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - timesheet-network

  # PostgreSQL Database for SonarQube
  postgres:
    image: postgres:13
    container_name: sonarqube-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - timesheet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SonarQube for Code Quality Analysis
  sonarqube:
    image: sonarqube:community
    container_name: timesheet-sonarqube
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - timesheet-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  # Nexus Repository Manager for Maven Dependencies
  nexus:
    image: sonatype/nexus3:latest
    container_name: timesheet-nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    networks:
      - timesheet-network
    environment:
      - INSTALL4J_ADD_VM_PARAMS=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=2g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/rest/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: timesheet-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - timesheet-network
    restart: unless-stopped

volumes:
  mysql_data:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  nexus_data:
  prometheus_data:
  grafana_data:
  jenkins_data:

networks:
  timesheet-network:
    driver: bridge
